name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: functions/package-lock.json

    - name: Install dependencies
      run: |
        cd functions
        npm ci

    - name: Run linter
      run: |
        cd functions
        npm run lint

    - name: Run tests
      run: |
        cd functions
        npm test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./functions/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: functions/package-lock.json

    - name: Install dependencies
      run: |
        cd functions
        npm ci

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase
      run: |
        cd functions
        firebase deploy --only functions --token "${{ secrets.FIREBASE_TOKEN }}"
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

